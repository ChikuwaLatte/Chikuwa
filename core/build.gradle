plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.0' apply false
	id 'io.spring.dependency-management' version '1.1.4'
	id 'org.asciidoctor.jvm.convert' version '3.3.2'
	// id 'org.flywaydb.flyway' version '9.15.2'
	id "com.qqviaja.gradle.MybatisGenerator" version "2.5"
}

group = 'com.chikuwa_latte'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

ext {
	set('snippetsDir', file("build/generated-snippets"))
}

dependencyManagement {
	imports {
		mavenBom org.springframework.boot.gradle.plugin.SpringBootPlugin.BOM_COORDINATES
	}
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.flywaydb:flyway-mysql'
	// mybatis-spring-boot-starter-test:3.0.3と互換性のあるバージョンにすること
	implementation 'org.mybatis:mybatis:3.5.16'
	implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:3.0.3'
	implementation 'org.mybatis.generator:mybatis-generator-core:1.4.2'
    runtimeOnly 'com.mysql:mysql-connector-j'
	compileOnly 'org.projectlombok:lombok'
    // developmentOnly 'org.springframework.boot:spring-boot-devtools'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
	testCompileOnly 'org.mybatis:mybatis:3.5.16'
	testCompileOnly ('org.mybatis.spring.boot:mybatis-spring-boot-starter-test:3.0.3') {
		exclude group: 'org.apache.logging.log4j'
	}
	// testImplementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter-test:3.0.3'
}

tasks.named('test') {
	outputs.dir snippetsDir
	useJUnitPlatform()
}

tasks.named('asciidoctor') {
	inputs.dir snippetsDir
	dependsOn test
}

// mybatisGenerator
mybatisGenerator {
    configFile = "${projectDir}/src/main/resources/generatorConfig.xml"
    dependencies {
        mybatisGenerator "com.mysql:mysql-connector-j:8.2.0"
        mybatisGenerator "org.mybatis.generator:mybatis-generator-core:1.4.2"
    }
}

// // Flyway設定
// flyway {
// 	master {
// 		user = 'admin'
// 		password = 'admin'
// 		host = 'localhost'
// 		port = '3306'
// 		schema = 'db_master'
// 		encoding = 'UTF-8'
// 		locations = ['filesystem:./core/src/main/resources/db/migration/db_master']
// 	}
// 	user {
// 		user = 'admin'
// 		password = 'admin'
// 		host = 'localhost'
// 		port = '3306'
// 		schema = 'db_user'
// 		encoding = 'UTF-8'
// 		locations = ['filesystem:./core/src/main/resources/db/migration/db_user']
// 	}
// }

// config.flyway.each { k, v ->
// 	def methodName = k.replaceFirst(/[a-z]/) { it.toUpperCase() }

// 	task "clean${methodName}"(type: org.flywaydb.gradle.task.FlywayCleanTask) {
// 		extension = new org.flywaydb.gradle.FlywayExtension()
// 		extension.locations = v.locations
// 		extension.url = "jdbc:mysql//${v.host}:${v.port}/?useSSL=false"
// 		extension.schema = [v.schema]
// 		extension.user = v.user
// 		extension.password = v.password
// 		extension.encoding = v.encoding
// 		extension.table = "${k}_flyway_schema_history"
// 	}

// 	task "migrate${methodName}"(type: org.flywaydb.gradle.task.FlywayMigrateTask) {
// 		extension = new org.flywaydb.gradle.FlywayExtension()
// 		extension.locations = v.locations
// 		extension.url = "jdbc:mysql//${v.host}:${v.port}/?useSSL=false"
// 		extension.schema = [v.schema]
// 		extension.user = v.user
// 		extension.password = v.password
// 		extension.encoding = v.encoding
// 		extension.table = "${k}_flyway_schema_history"
// 	}
// }